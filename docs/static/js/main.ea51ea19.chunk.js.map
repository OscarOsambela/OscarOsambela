{"version":3,"sources":["GiftExpertApp/Components/AddCategory.js","Helpers/getGifs.js","GiftExpertApp/Components/GiftGridItem.js","GiftExpertApp/Components/GiftGrid.js","Hooks/useFetchGifs.js","GiftExpertApp/Components/GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFecthGifs","key","GiftExpertApp","categories","ReactDom","render","document","getElementById"],"mappings":"uMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,6BACE,0BAAMC,SAXW,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,OAQd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAnBgB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,uBCPdG,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,0DAC0CC,UAAUH,GADpD,sDAEFI,MAAMF,GAFJ,cAEdG,EAFc,gBAGCA,EAAIC,OAHL,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAabM,GAba,4CAAH,sDCERO,EAAe,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACjC,OACI,yBAAKc,UAAU,0DACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCDHO,EAAW,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SACtB,ECHwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAVAC,qBAAU,WACNxB,EAASC,GACJwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDdwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,oCACA,4BAAKpB,GACJoB,GAAW,yCACZ,yBAAKJ,UAAU,YAEPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,OALpB,cEiBOkB,EAzBO,WAClB,MAAoC1C,mBAAS,CACzC,cADJ,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAIA,OACI,6BACI,6CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,2CACA,4BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAUA,U,MCdtC8B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.ea51ea19.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  \r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(inputValue.trim().length > 2){\r\n        setCategories(cat => [inputValue, ...cat]);\r\n        setInputValue('');\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input \r\n            type=\"text\" \r\n            value={inputValue} \r\n            onChange={handleInputChange} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifts = async(category)=>{\r\n    const url= `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=Dp47iisvZqAo6y5thqoCQFrjxMS9RunK`\r\n    const res = await fetch(url);\r\n    const {data} = await res.json();\r\n\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })    \r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GiftGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useFecthGifs } from '../../Hooks/useFetchGifs';\r\nimport { GiftGridItem } from './GiftGridItem';\r\n\r\n\r\nexport const GiftGrid = ({category}) => {\r\n    const {data:images, loading} = useFecthGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        {loading && <p>Loading...</p>}\r\n        <div className=\"cardGrid\">\r\n            {\r\n                images.map(img=>(\r\n                    <GiftGridItem\r\n                        key={img.id}\r\n                        {...img}\r\n                    />\r\n                ))\r\n            }        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifts } from \"../Helpers/getGifs\";\r\n\r\nexport const useFecthGifs = (category) =>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    \r\n    useEffect(() => {\r\n        getGifts(category)\r\n            .then(imgs=>{\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })        \r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './AddCategory';\r\nimport { GiftGrid } from './GiftGrid';\r\n\r\nconst GiftExpertApp = () => {\r\n    const [categories, setCategories] = useState([\r\n        'One Punch',\r\n    ]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            <button>Agregar</button>\r\n            <ol>\r\n                {\r\n                    categories.map(category=>(\r\n                        <GiftGrid \r\n                            key={category} \r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GiftExpertApp","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport GiftExpertApp from './GiftExpertApp/Components/GiftExpertApp';\r\n\r\nimport './index.css';\r\n\r\nReactDom.render(\r\n    <GiftExpertApp/>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}